# compile via   ffc -l dolfin heat.ufl
# grid
cell = triangle
element = FiniteElement("Lagrange", cell, 1)

v = TestFunction(element)

# solutions
u  = TrialFunction(element)
u0 = Coefficient(element)

# heat equation constants and timestep
alpha  = Constant(cell)
lambda_diff = Constant(cell)
dt     = Constant(cell)
fnew   = Coefficient(element)

eq = alpha*u*v*dx - alpha*u0*v*dx + 0.5*lambda_diff*dt*dot(grad(u) + grad(u0), grad(v))*dx + dt*fnew*v*ds
a = lhs(eq)
L = rhs(eq)